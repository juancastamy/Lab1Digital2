

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sun Jan 26 01:03:08 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	idataBANK0,global,class=CODE,delta=2
     6                           	psect	cinit,global,class=CODE,merge=1,delta=2
     7                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    12                           	psect	maintext,global,class=CODE,split=1,delta=2
    13                           	psect	text1,local,class=CODE,merge=1,delta=2
    14                           	dabs	1,0x7E,2
    15  0000                     
    16                           ; Version 2.10
    17                           ; Generated 31/07/2019 GMT
    18                           ; 
    19                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    20                           ; All rights reserved.
    21                           ; 
    22                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    23                           ; 
    24                           ; Redistribution and use in source and binary forms, with or without modification, are
    25                           ; permitted provided that the following conditions are met:
    26                           ; 
    27                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    28                           ;        conditions and the following disclaimer.
    29                           ; 
    30                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    31                           ;        of conditions and the following disclaimer in the documentation and/or other
    32                           ;        materials provided with the distribution.
    33                           ; 
    34                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    35                           ;        software without specific prior written permission.
    36                           ; 
    37                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    38                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    39                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    40                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    41                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    42                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    43                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    44                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    45                           ; 
    46                           ; 
    47                           ; Code-generator required, PIC16F887 Definitions
    48                           ; 
    49                           ; SFR Addresses
    50  0000                     	;# 
    51  0001                     	;# 
    52  0002                     	;# 
    53  0003                     	;# 
    54  0004                     	;# 
    55  0005                     	;# 
    56  0006                     	;# 
    57  0007                     	;# 
    58  0008                     	;# 
    59  0009                     	;# 
    60  000A                     	;# 
    61  000B                     	;# 
    62  000C                     	;# 
    63  000D                     	;# 
    64  000E                     	;# 
    65  000E                     	;# 
    66  000F                     	;# 
    67  0010                     	;# 
    68  0011                     	;# 
    69  0012                     	;# 
    70  0013                     	;# 
    71  0014                     	;# 
    72  0015                     	;# 
    73  0015                     	;# 
    74  0016                     	;# 
    75  0017                     	;# 
    76  0018                     	;# 
    77  0019                     	;# 
    78  001A                     	;# 
    79  001B                     	;# 
    80  001B                     	;# 
    81  001C                     	;# 
    82  001D                     	;# 
    83  001E                     	;# 
    84  001F                     	;# 
    85  0081                     	;# 
    86  0085                     	;# 
    87  0086                     	;# 
    88  0087                     	;# 
    89  0088                     	;# 
    90  0089                     	;# 
    91  008C                     	;# 
    92  008D                     	;# 
    93  008E                     	;# 
    94  008F                     	;# 
    95  0090                     	;# 
    96  0091                     	;# 
    97  0092                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0093                     	;# 
   101  0094                     	;# 
   102  0095                     	;# 
   103  0096                     	;# 
   104  0097                     	;# 
   105  0098                     	;# 
   106  0099                     	;# 
   107  009A                     	;# 
   108  009B                     	;# 
   109  009C                     	;# 
   110  009D                     	;# 
   111  009E                     	;# 
   112  009F                     	;# 
   113  0105                     	;# 
   114  0107                     	;# 
   115  0108                     	;# 
   116  0109                     	;# 
   117  010C                     	;# 
   118  010C                     	;# 
   119  010D                     	;# 
   120  010E                     	;# 
   121  010F                     	;# 
   122  0185                     	;# 
   123  0187                     	;# 
   124  0188                     	;# 
   125  0189                     	;# 
   126  018C                     	;# 
   127  018D                     	;# 
   128  0000                     	;# 
   129  0001                     	;# 
   130  0002                     	;# 
   131  0003                     	;# 
   132  0004                     	;# 
   133  0005                     	;# 
   134  0006                     	;# 
   135  0007                     	;# 
   136  0008                     	;# 
   137  0009                     	;# 
   138  000A                     	;# 
   139  000B                     	;# 
   140  000C                     	;# 
   141  000D                     	;# 
   142  000E                     	;# 
   143  000E                     	;# 
   144  000F                     	;# 
   145  0010                     	;# 
   146  0011                     	;# 
   147  0012                     	;# 
   148  0013                     	;# 
   149  0014                     	;# 
   150  0015                     	;# 
   151  0015                     	;# 
   152  0016                     	;# 
   153  0017                     	;# 
   154  0018                     	;# 
   155  0019                     	;# 
   156  001A                     	;# 
   157  001B                     	;# 
   158  001B                     	;# 
   159  001C                     	;# 
   160  001D                     	;# 
   161  001E                     	;# 
   162  001F                     	;# 
   163  0081                     	;# 
   164  0085                     	;# 
   165  0086                     	;# 
   166  0087                     	;# 
   167  0088                     	;# 
   168  0089                     	;# 
   169  008C                     	;# 
   170  008D                     	;# 
   171  008E                     	;# 
   172  008F                     	;# 
   173  0090                     	;# 
   174  0091                     	;# 
   175  0092                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0093                     	;# 
   179  0094                     	;# 
   180  0095                     	;# 
   181  0096                     	;# 
   182  0097                     	;# 
   183  0098                     	;# 
   184  0099                     	;# 
   185  009A                     	;# 
   186  009B                     	;# 
   187  009C                     	;# 
   188  009D                     	;# 
   189  009E                     	;# 
   190  009F                     	;# 
   191  0105                     	;# 
   192  0107                     	;# 
   193  0108                     	;# 
   194  0109                     	;# 
   195  010C                     	;# 
   196  010C                     	;# 
   197  010D                     	;# 
   198  010E                     	;# 
   199  010F                     	;# 
   200  0185                     	;# 
   201  0187                     	;# 
   202  0188                     	;# 
   203  0189                     	;# 
   204  018C                     	;# 
   205  018D                     	;# 
   206                           
   207                           	psect	idataCOMMON
   208  06B4                     __pidataCOMMON:	
   209                           
   210                           ;initializer for _SEGMENTOS
   211  06B4  343F               	retlw	63
   212  06B5  3406               	retlw	6
   213  06B6  345B               	retlw	91
   214  06B7  344F               	retlw	79
   215                           
   216                           ;initializer for _i
   217  06B8  3403               	retlw	3
   218                           
   219                           ;initializer for _EJ2
   220  06B9  3401               	retlw	1
   221                           
   222                           	psect	idataBANK0
   223  06BA                     __pidataBANK0:	
   224                           
   225                           ;initializer for _jugador2
   226  06BA  3401               	retlw	1
   227  06BB  3402               	retlw	2
   228  06BC  3404               	retlw	4
   229  06BD  3408               	retlw	8
   230  06BE  3410               	retlw	16
   231  06BF  3420               	retlw	32
   232  06C0  3440               	retlw	64
   233  06C1  3480               	retlw	128
   234                           
   235                           ;initializer for _jugador1
   236  06C2  3401               	retlw	1
   237  06C3  3402               	retlw	2
   238  06C4  3404               	retlw	4
   239  06C5  3408               	retlw	8
   240  06C6  3410               	retlw	16
   241  06C7  3420               	retlw	32
   242  06C8  3440               	retlw	64
   243  06C9  3480               	retlw	128
   244  0006                     _PORTB	set	6
   245  0009                     _PORTEbits	set	9
   246  0008                     _PORTDbits	set	8
   247  0005                     _PORTA	set	5
   248  0007                     _PORTC	set	7
   249  0089                     _TRISEbits	set	137
   250  0085                     _TRISA	set	133
   251  0088                     _TRISDbits	set	136
   252  0087                     _TRISC	set	135
   253  008F                     _OSCCON	set	143
   254  0188                     _ANSEL	set	392
   255  0189                     _ANSELH	set	393
   256                           
   257                           ; #config settings
   258  0000                     
   259                           	psect	cinit
   260  07C6                     start_initialization:	
   261  07C6                     __initialization:	
   262                           
   263                           ; Initialize objects allocated to BANK0
   264  07C6  1383               	bcf	3,7	;select IRP bank0
   265  07C7  3030               	movlw	low (__pdataBANK0+16)
   266  07C8  00FD               	movwf	btemp+-1
   267  07C9  3006               	movlw	high __pidataBANK0
   268  07CA  00FE               	movwf	btemp
   269  07CB  30BA               	movlw	low __pidataBANK0
   270  07CC  00FF               	movwf	btemp+1
   271  07CD  3020               	movlw	low __pdataBANK0
   272  07CE  0084               	movwf	4
   273  07CF  120A  118A  26CE  120A  118A  	fcall	init_ram0
   274                           
   275                           ; Initialize objects allocated to COMMON
   276  07D4  120A  118A  26B4  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   277  07D9  00F0               	movwf	__pdataCOMMON& (0+127)
   278  07DA  120A  118A  26B5  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   279  07DF  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   280  07E0  120A  118A  26B6  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   281  07E5  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   282  07E6  120A  118A  26B7  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   283  07EB  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   284  07EC  120A  118A  26B8  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   285  07F1  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   286  07F2  120A  118A  26B9  120A  118A  	fcall	__pidataCOMMON+5	;fetch initializer
   287  07F7  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   288                           
   289                           ; Clear objects allocated to COMMON
   290  07F8  01F6               	clrf	__pbssCOMMON& (0+127)
   291  07F9  01F7               	clrf	(__pbssCOMMON+1)& (0+127)
   292  07FA  01F8               	clrf	(__pbssCOMMON+2)& (0+127)
   293  07FB  01F9               	clrf	(__pbssCOMMON+3)& (0+127)
   294  07FC                     end_of_initialization:	
   295                           ;End of C runtime variable initialization code
   296                           
   297  07FC                     __end_of__initialization:	
   298  07FC  0183               	clrf	3
   299  07FD  120A  118A  2F41   	ljmp	_main	;jump to C main() function
   300                           
   301                           	psect	bssCOMMON
   302  0076                     __pbssCOMMON:	
   303  0076                     _y:	
   304  0076                     	ds	1
   305  0077                     _x:	
   306  0077                     	ds	1
   307  0078                     _EJ1:	
   308  0078                     	ds	1
   309  0079                     _Estado:	
   310  0079                     	ds	1
   311                           
   312                           	psect	dataCOMMON
   313  0070                     __pdataCOMMON:	
   314  0070                     _SEGMENTOS:	
   315  0070                     	ds	4
   316  0074                     _i:	
   317  0074                     	ds	1
   318  0075                     _EJ2:	
   319  0075                     	ds	1
   320                           
   321                           	psect	dataBANK0
   322  0020                     __pdataBANK0:	
   323  0020                     _jugador2:	
   324  0020                     	ds	8
   325  0028                     _jugador1:	
   326  0028                     	ds	8
   327                           
   328                           	psect	inittext
   329  06CA                     init_fetch0:	
   330                           ;	Called with low address in FSR and high address in W
   331                           
   332  06CA  087E               	movf	btemp,w
   333  06CB  008A               	movwf	10
   334  06CC  087F               	movf	btemp+1,w
   335  06CD  0082               	movwf	2
   336  06CE                     init_ram0:	
   337                           ;Called with:
   338                           ;	high address of idata address in btemp 
   339                           ;	low address of idata address in btemp+1 
   340                           ;	low address of data in FSR
   341                           ;	high address + 1 of data in btemp-1
   342                           
   343  06CE  120A  118A  26CA  120A  118A  	fcall	init_fetch0
   344  06D3  0080               	movwf	0
   345  06D4  0A84               	incf	4,f
   346  06D5  0804               	movf	4,w
   347  06D6  067D               	xorwf	btemp+-1,w
   348  06D7  1903               	btfsc	3,2
   349  06D8  3400               	retlw	0
   350  06D9  0AFF               	incf	btemp+1,f
   351  06DA  1903               	btfsc	3,2
   352  06DB  0AFE               	incf	btemp,f
   353  06DC  2ECE               	goto	init_ram0
   354                           
   355                           	psect	cstackCOMMON
   356  007A                     __pcstackCOMMON:	
   357  007A                     ?_JUEGO:	
   358  007A                     ??_JUEGO:	
   359                           ; 1 bytes @ 0x0
   360                           
   361  007A                     ?_main:	
   362                           ; 1 bytes @ 0x0
   363                           
   364                           
   365                           ; 1 bytes @ 0x0
   366  007A                     	ds	1
   367  007B                     ??_main:	
   368                           
   369                           ; 1 bytes @ 0x1
   370  007B                     	ds	2
   371                           
   372                           	psect	maintext
   373  0741                     __pmaintext:	
   374 ;;
   375 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   376 ;;
   377 ;; *************** function _main *****************
   378 ;; Defined at:
   379 ;;		line 53 in file "Lab1.c"
   380 ;; Parameters:    Size  Location     Type
   381 ;;		None
   382 ;; Auto vars:     Size  Location     Type
   383 ;;		None
   384 ;; Return value:  Size  Location     Type
   385 ;;                  1    wreg      void 
   386 ;; Registers used:
   387 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   388 ;; Tracked objects:
   389 ;;		On entry : B00/0
   390 ;;		On exit  : 0/0
   391 ;;		Unchanged: 0/0
   392 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   393 ;;      Params:         0       0       0       0       0
   394 ;;      Locals:         0       0       0       0       0
   395 ;;      Temps:          2       0       0       0       0
   396 ;;      Totals:         2       0       0       0       0
   397 ;;Total ram usage:        2 bytes
   398 ;; Hardware stack levels required when called:    1
   399 ;; This function calls:
   400 ;;		_JUEGO
   401 ;; This function is called by:
   402 ;;		Startup code after reset
   403 ;; This function uses a non-reentrant model
   404 ;;
   405                           
   406                           
   407                           ;psect for function _main
   408  0741                     _main:	
   409  0741                     l860:	
   410                           ;incstack = 0
   411                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   412                           
   413                           
   414                           ;Lab1.c: 54:     OSCCON = 0b110;
   415  0741  3006               	movlw	6
   416  0742  1683               	bsf	3,5	;RP0=1, select bank1
   417  0743  1303               	bcf	3,6	;RP1=0, select bank1
   418  0744  008F               	movwf	15	;volatile
   419  0745                     l862:	
   420                           
   421                           ;Lab1.c: 55:     TRISC = 0;
   422  0745  0187               	clrf	7	;volatile
   423  0746                     l864:	
   424                           
   425                           ;Lab1.c: 56:     TRISDbits.TRISD2 = 0;
   426  0746  1108               	bcf	8,2	;volatile
   427  0747                     l866:	
   428                           
   429                           ;Lab1.c: 57:     TRISDbits.TRISD3 = 0;
   430  0747  1188               	bcf	8,3	;volatile
   431  0748                     l868:	
   432                           
   433                           ;Lab1.c: 58:     TRISDbits.TRISD4 = 0;
   434  0748  1208               	bcf	8,4	;volatile
   435  0749                     l870:	
   436                           
   437                           ;Lab1.c: 59:     TRISA = 0;
   438  0749  0185               	clrf	5	;volatile
   439  074A                     l872:	
   440                           
   441                           ;Lab1.c: 60:     TRISEbits.TRISE1 = 1;
   442  074A  1489               	bsf	9,1	;volatile
   443  074B                     l874:	
   444                           
   445                           ;Lab1.c: 61:     TRISEbits.TRISE2 = 1;
   446  074B  1509               	bsf	9,2	;volatile
   447  074C                     l876:	
   448                           
   449                           ;Lab1.c: 62:     TRISEbits.TRISE3 = 1;
   450  074C  1589               	bsf	9,3	;volatile
   451  074D                     l878:	
   452                           
   453                           ;Lab1.c: 64:     ANSELH = 0;
   454  074D  1683               	bsf	3,5	;RP0=1, select bank3
   455  074E  1703               	bsf	3,6	;RP1=1, select bank3
   456  074F  0189               	clrf	9	;volatile
   457  0750                     l880:	
   458                           
   459                           ;Lab1.c: 65:     ANSEL = 0;
   460  0750  0188               	clrf	8	;volatile
   461  0751                     l882:	
   462                           
   463                           ;Lab1.c: 68:         PORTC = 0;
   464  0751  1283               	bcf	3,5	;RP0=0, select bank0
   465  0752  1303               	bcf	3,6	;RP1=0, select bank0
   466  0753  0187               	clrf	7	;volatile
   467  0754                     l884:	
   468                           
   469                           ;Lab1.c: 69:         PORTA = 0;
   470  0754  0185               	clrf	5	;volatile
   471  0755                     l886:	
   472                           
   473                           ;Lab1.c: 70:         PORTDbits.RD2 = 0;
   474  0755  1108               	bcf	8,2	;volatile
   475  0756                     l888:	
   476                           
   477                           ;Lab1.c: 71:         PORTDbits.RD3 = 0;
   478  0756  1188               	bcf	8,3	;volatile
   479  0757                     l890:	
   480                           
   481                           ;Lab1.c: 72:         PORTDbits.RD4 = 0;
   482  0757  1208               	bcf	8,4	;volatile
   483  0758                     l892:	
   484                           
   485                           ;Lab1.c: 73:         if (PORTEbits.RE3 == 1){
   486  0758  1D89               	btfss	9,3	;volatile
   487  0759  2F5B               	goto	u241
   488  075A  2F5C               	goto	u240
   489  075B                     u241:	
   490  075B  2F5E               	goto	l52
   491  075C                     u240:	
   492  075C                     l894:	
   493                           
   494                           ;Lab1.c: 74:             Estado = 1;
   495  075C  01F9               	clrf	_Estado
   496  075D  0AF9               	incf	_Estado,f
   497  075E                     l52:	
   498                           ;Lab1.c: 75:         }
   499                           
   500                           
   501                           ;Lab1.c: 76:         if (PORTEbits.RE3 == 0 && Estado == 1){
   502  075E  1989               	btfsc	9,3	;volatile
   503  075F  2F61               	goto	u251
   504  0760  2F62               	goto	u250
   505  0761                     u251:	
   506  0761  2F51               	goto	l882
   507  0762                     u250:	
   508  0762                     l896:	
   509  0762  0379               	decf	_Estado,w
   510  0763  1D03               	btfss	3,2
   511  0764  2F66               	goto	u261
   512  0765  2F67               	goto	u260
   513  0766                     u261:	
   514  0766  2F51               	goto	l882
   515  0767                     u260:	
   516  0767                     l898:	
   517                           
   518                           ;Lab1.c: 77:             PORTC = SEGMENTOS[i];
   519  0767  0874               	movf	_i,w
   520  0768  3E70               	addlw	(low (_SEGMENTOS| 0))& (0+255)
   521  0769  0084               	movwf	4
   522  076A  0800               	movf	0,w
   523  076B  0087               	movwf	7	;volatile
   524  076C                     l900:	
   525                           
   526                           ;Lab1.c: 78:             PORTDbits.RD2 = 1;
   527  076C  1508               	bsf	8,2	;volatile
   528  076D                     l902:	
   529                           
   530                           ;Lab1.c: 79:             PORTDbits.RD3 = 0;
   531  076D  1188               	bcf	8,3	;volatile
   532  076E                     l904:	
   533                           
   534                           ;Lab1.c: 80:             PORTDbits.RD4 = 0;
   535  076E  1208               	bcf	8,4	;volatile
   536  076F                     l906:	
   537                           
   538                           ;Lab1.c: 81:             _delay((unsigned long)((5)*(4000000/4000.0)));
   539  076F  3007               	movlw	7
   540  0770  00FC               	movwf	??_main+1
   541  0771  307D               	movlw	125
   542  0772  00FB               	movwf	??_main
   543  0773                     u277:	
   544  0773  0BFB               	decfsz	??_main,f
   545  0774  2F73               	goto	u277
   546  0775  0BFC               	decfsz	??_main+1,f
   547  0776  2F73               	goto	u277
   548  0777                     l908:	
   549                           
   550                           ;Lab1.c: 82:             i = i-1;
   551  0777  0874               	movf	_i,w
   552  0778  3EFF               	addlw	255
   553  0779  00FB               	movwf	??_main
   554  077A  087B               	movf	??_main,w
   555  077B  00F4               	movwf	_i
   556  077C                     l910:	
   557                           
   558                           ;Lab1.c: 83:             PORTC = SEGMENTOS[i];
   559  077C  0874               	movf	_i,w
   560  077D  3E70               	addlw	(low (_SEGMENTOS| 0))& (0+255)
   561  077E  0084               	movwf	4
   562  077F  0800               	movf	0,w
   563  0780  1283               	bcf	3,5	;RP0=0, select bank0
   564  0781  1303               	bcf	3,6	;RP1=0, select bank0
   565  0782  0087               	movwf	7	;volatile
   566  0783                     l912:	
   567                           
   568                           ;Lab1.c: 84:             PORTDbits.RD2 = 0;
   569  0783  1108               	bcf	8,2	;volatile
   570  0784                     l914:	
   571                           
   572                           ;Lab1.c: 85:             PORTDbits.RD3 = 1;
   573  0784  1588               	bsf	8,3	;volatile
   574  0785                     l916:	
   575                           
   576                           ;Lab1.c: 86:             PORTDbits.RD4 = 0;
   577  0785  1208               	bcf	8,4	;volatile
   578  0786                     l918:	
   579                           
   580                           ;Lab1.c: 87:             _delay((unsigned long)((5)*(4000000/4000.0)));
   581  0786  3007               	movlw	7
   582  0787  00FC               	movwf	??_main+1
   583  0788  307D               	movlw	125
   584  0789  00FB               	movwf	??_main
   585  078A                     u287:	
   586  078A  0BFB               	decfsz	??_main,f
   587  078B  2F8A               	goto	u287
   588  078C  0BFC               	decfsz	??_main+1,f
   589  078D  2F8A               	goto	u287
   590                           
   591                           ;Lab1.c: 88:             i = i-1;
   592  078E  0874               	movf	_i,w
   593  078F  3EFF               	addlw	255
   594  0790  00FB               	movwf	??_main
   595  0791  087B               	movf	??_main,w
   596  0792  00F4               	movwf	_i
   597  0793                     l920:	
   598                           
   599                           ;Lab1.c: 89:             PORTC = SEGMENTOS[i];
   600  0793  0874               	movf	_i,w
   601  0794  3E70               	addlw	(low (_SEGMENTOS| 0))& (0+255)
   602  0795  0084               	movwf	4
   603  0796  0800               	movf	0,w
   604  0797  1283               	bcf	3,5	;RP0=0, select bank0
   605  0798  1303               	bcf	3,6	;RP1=0, select bank0
   606  0799  0087               	movwf	7	;volatile
   607  079A                     l922:	
   608                           
   609                           ;Lab1.c: 90:             PORTDbits.RD2 = 0;
   610  079A  1108               	bcf	8,2	;volatile
   611  079B                     l924:	
   612                           
   613                           ;Lab1.c: 91:             PORTDbits.RD3 = 0;
   614  079B  1188               	bcf	8,3	;volatile
   615  079C                     l926:	
   616                           
   617                           ;Lab1.c: 92:             PORTDbits.RD4 = 1;
   618  079C  1608               	bsf	8,4	;volatile
   619  079D                     l928:	
   620                           
   621                           ;Lab1.c: 93:             _delay((unsigned long)((5)*(4000000/4000.0)));
   622  079D  3007               	movlw	7
   623  079E  00FC               	movwf	??_main+1
   624  079F  307D               	movlw	125
   625  07A0  00FB               	movwf	??_main
   626  07A1                     u297:	
   627  07A1  0BFB               	decfsz	??_main,f
   628  07A2  2FA1               	goto	u297
   629  07A3  0BFC               	decfsz	??_main+1,f
   630  07A4  2FA1               	goto	u297
   631  07A5                     l930:	
   632                           
   633                           ;Lab1.c: 94:             i = i-1;
   634  07A5  0874               	movf	_i,w
   635  07A6  3EFF               	addlw	255
   636  07A7  00FB               	movwf	??_main
   637  07A8  087B               	movf	??_main,w
   638  07A9  00F4               	movwf	_i
   639  07AA                     l932:	
   640                           
   641                           ;Lab1.c: 95:             PORTC = SEGMENTOS[i];
   642  07AA  0874               	movf	_i,w
   643  07AB  3E70               	addlw	(low (_SEGMENTOS| 0))& (0+255)
   644  07AC  0084               	movwf	4
   645  07AD  0800               	movf	0,w
   646  07AE  1283               	bcf	3,5	;RP0=0, select bank0
   647  07AF  1303               	bcf	3,6	;RP1=0, select bank0
   648  07B0  0087               	movwf	7	;volatile
   649  07B1                     l934:	
   650                           
   651                           ;Lab1.c: 96:             PORTDbits.RD2 = 1;
   652  07B1  1508               	bsf	8,2	;volatile
   653  07B2                     l936:	
   654                           
   655                           ;Lab1.c: 97:             PORTDbits.RD3 = 1;
   656  07B2  1588               	bsf	8,3	;volatile
   657  07B3                     l938:	
   658                           
   659                           ;Lab1.c: 98:             PORTDbits.RD4 = 1;
   660  07B3  1608               	bsf	8,4	;volatile
   661  07B4                     l940:	
   662                           
   663                           ;Lab1.c: 99:             Estado = 0;
   664  07B4  01F9               	clrf	_Estado
   665  07B5                     l942:	
   666                           
   667                           ;Lab1.c: 100:             _delay((unsigned long)((5)*(4000000/4000.0)));
   668  07B5  3007               	movlw	7
   669  07B6  00FC               	movwf	??_main+1
   670  07B7  307D               	movlw	125
   671  07B8  00FB               	movwf	??_main
   672  07B9                     u307:	
   673  07B9  0BFB               	decfsz	??_main,f
   674  07BA  2FB9               	goto	u307
   675  07BB  0BFC               	decfsz	??_main+1,f
   676  07BC  2FB9               	goto	u307
   677  07BD                     l944:	
   678                           
   679                           ;Lab1.c: 101:             JUEGO();
   680  07BD  120A  118A  26DD  120A  118A  	fcall	_JUEGO
   681  07C2  2F51               	goto	l882
   682  07C3  120A  118A  2800   	ljmp	start
   683  07C6                     __end_of_main:	
   684                           
   685                           	psect	text1
   686  06DD                     __ptext1:	
   687 ;; *************** function _JUEGO *****************
   688 ;; Defined at:
   689 ;;		line 108 in file "Lab1.c"
   690 ;; Parameters:    Size  Location     Type
   691 ;;		None
   692 ;; Auto vars:     Size  Location     Type
   693 ;;		None
   694 ;; Return value:  Size  Location     Type
   695 ;;                  1    wreg      void 
   696 ;; Registers used:
   697 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   698 ;; Tracked objects:
   699 ;;		On entry : 0/0
   700 ;;		On exit  : 0/0
   701 ;;		Unchanged: 0/0
   702 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   703 ;;      Params:         0       0       0       0       0
   704 ;;      Locals:         0       0       0       0       0
   705 ;;      Temps:          1       0       0       0       0
   706 ;;      Totals:         1       0       0       0       0
   707 ;;Total ram usage:        1 bytes
   708 ;; Hardware stack levels used:    1
   709 ;; This function calls:
   710 ;;		Nothing
   711 ;; This function is called by:
   712 ;;		_main
   713 ;; This function uses a non-reentrant model
   714 ;;
   715                           
   716                           
   717                           ;psect for function _JUEGO
   718  06DD                     _JUEGO:	
   719  06DD                     l59:	
   720                           ;incstack = 0
   721                           ; Regs used in _JUEGO: [wreg-fsr0h+status,2+status,0]
   722                           ;Lab1.c: 109:     while(1){
   723                           
   724                           
   725                           ;Lab1.c: 110:         if (PORTEbits.RE1 == 1){
   726  06DD  1283               	bcf	3,5	;RP0=0, select bank0
   727  06DE  1303               	bcf	3,6	;RP1=0, select bank0
   728  06DF  1C89               	btfss	9,1	;volatile
   729  06E0  2EE2               	goto	u141
   730  06E1  2EE3               	goto	u140
   731  06E2                     u141:	
   732  06E2  2EE5               	goto	l60
   733  06E3                     u140:	
   734  06E3                     l804:	
   735                           
   736                           ;Lab1.c: 111:                 EJ1 = 1;
   737  06E3  01F8               	clrf	_EJ1
   738  06E4  0AF8               	incf	_EJ1,f
   739  06E5                     l60:	
   740                           ;Lab1.c: 112:             }
   741                           
   742                           
   743                           ;Lab1.c: 113:         if (PORTEbits.RE1 == 0 && EJ1 == 1){
   744  06E5  1889               	btfsc	9,1	;volatile
   745  06E6  2EE8               	goto	u151
   746  06E7  2EE9               	goto	u150
   747  06E8                     u151:	
   748  06E8  2EFA               	goto	l814
   749  06E9                     u150:	
   750  06E9                     l806:	
   751  06E9  0378               	decf	_EJ1,w
   752  06EA  1D03               	btfss	3,2
   753  06EB  2EED               	goto	u161
   754  06EC  2EEE               	goto	u160
   755  06ED                     u161:	
   756  06ED  2EFA               	goto	l814
   757  06EE                     u160:	
   758  06EE                     l808:	
   759                           
   760                           ;Lab1.c: 114:             x=x+1;
   761  06EE  0877               	movf	_x,w
   762  06EF  3E01               	addlw	1
   763  06F0  00FA               	movwf	??_JUEGO
   764  06F1  087A               	movf	??_JUEGO,w
   765  06F2  00F7               	movwf	_x
   766  06F3                     l810:	
   767                           
   768                           ;Lab1.c: 115:             PORTA = jugador1[x];
   769  06F3  0877               	movf	_x,w
   770  06F4  3E28               	addlw	(low (_jugador1| 0))& (0+255)
   771  06F5  0084               	movwf	4
   772  06F6  1383               	bcf	3,7	;select IRP bank0
   773  06F7  0800               	movf	0,w
   774  06F8  0085               	movwf	5	;volatile
   775  06F9                     l812:	
   776                           
   777                           ;Lab1.c: 116:             EJ1 = 0;
   778  06F9  01F8               	clrf	_EJ1
   779  06FA                     l814:	
   780                           
   781                           ;Lab1.c: 118:         if (x==8){
   782  06FA  3008               	movlw	8
   783  06FB  0677               	xorwf	_x,w
   784  06FC  1D03               	btfss	3,2
   785  06FD  2EFF               	goto	u171
   786  06FE  2F00               	goto	u170
   787  06FF                     u171:	
   788  06FF  2F01               	goto	l818
   789  0700                     u170:	
   790  0700                     l816:	
   791                           
   792                           ;Lab1.c: 119:             PORTA = 0;
   793  0700  0185               	clrf	5	;volatile
   794  0701                     l818:	
   795                           
   796                           ;Lab1.c: 121:         if(x==9){
   797  0701  3009               	movlw	9
   798  0702  0677               	xorwf	_x,w
   799  0703  1D03               	btfss	3,2
   800  0704  2F06               	goto	u181
   801  0705  2F07               	goto	u180
   802  0706                     u181:	
   803  0706  2F10               	goto	l63
   804  0707                     u180:	
   805  0707                     l820:	
   806                           
   807                           ;Lab1.c: 122:             x=0;
   808  0707  01F7               	clrf	_x
   809  0708                     l822:	
   810                           
   811                           ;Lab1.c: 123:             i=3;
   812  0708  3003               	movlw	3
   813  0709  00FA               	movwf	??_JUEGO
   814  070A  087A               	movf	??_JUEGO,w
   815  070B  00F4               	movwf	_i
   816  070C                     l824:	
   817                           
   818                           ;Lab1.c: 124:             PORTDbits.RD2 = 0;
   819  070C  1108               	bcf	8,2	;volatile
   820  070D                     l826:	
   821                           
   822                           ;Lab1.c: 125:             PORTDbits.RD3 = 0;
   823  070D  1188               	bcf	8,3	;volatile
   824  070E                     l828:	
   825                           
   826                           ;Lab1.c: 126:             PORTDbits.RD4 = 0;
   827  070E  1208               	bcf	8,4	;volatile
   828  070F  2F40               	goto	l64
   829  0710                     l63:	
   830                           ;Lab1.c: 128:         }
   831                           
   832                           
   833                           ;Lab1.c: 129:         if (PORTEbits.RE2 == 1){
   834  0710  1D09               	btfss	9,2	;volatile
   835  0711  2F13               	goto	u191
   836  0712  2F14               	goto	u190
   837  0713                     u191:	
   838  0713  2F16               	goto	l65
   839  0714                     u190:	
   840  0714                     l832:	
   841                           
   842                           ;Lab1.c: 130:             EJ2 = 1;
   843  0714  01F5               	clrf	_EJ2
   844  0715  0AF5               	incf	_EJ2,f
   845  0716                     l65:	
   846                           ;Lab1.c: 131:         }
   847                           
   848                           
   849                           ;Lab1.c: 132:         if (PORTEbits.RE2 == 0 && EJ2 == 1){
   850  0716  1909               	btfsc	9,2	;volatile
   851  0717  2F19               	goto	u201
   852  0718  2F1A               	goto	u200
   853  0719                     u201:	
   854  0719  2F2B               	goto	l842
   855  071A                     u200:	
   856  071A                     l834:	
   857  071A  0375               	decf	_EJ2,w
   858  071B  1D03               	btfss	3,2
   859  071C  2F1E               	goto	u211
   860  071D  2F1F               	goto	u210
   861  071E                     u211:	
   862  071E  2F2B               	goto	l842
   863  071F                     u210:	
   864  071F                     l836:	
   865                           
   866                           ;Lab1.c: 133:             y=y+1;
   867  071F  0876               	movf	_y,w
   868  0720  3E01               	addlw	1
   869  0721  00FA               	movwf	??_JUEGO
   870  0722  087A               	movf	??_JUEGO,w
   871  0723  00F6               	movwf	_y
   872  0724                     l838:	
   873                           
   874                           ;Lab1.c: 134:             PORTB = jugador2[y];
   875  0724  0876               	movf	_y,w
   876  0725  3E20               	addlw	(low (_jugador2| 0))& (0+255)
   877  0726  0084               	movwf	4
   878  0727  1383               	bcf	3,7	;select IRP bank0
   879  0728  0800               	movf	0,w
   880  0729  0086               	movwf	6	;volatile
   881  072A                     l840:	
   882                           
   883                           ;Lab1.c: 135:             EJ2 = 0;
   884  072A  01F5               	clrf	_EJ2
   885  072B                     l842:	
   886                           
   887                           ;Lab1.c: 137:         if (y==8){
   888  072B  3008               	movlw	8
   889  072C  0676               	xorwf	_y,w
   890  072D  1D03               	btfss	3,2
   891  072E  2F30               	goto	u221
   892  072F  2F31               	goto	u220
   893  0730                     u221:	
   894  0730  2F32               	goto	l846
   895  0731                     u220:	
   896  0731                     l844:	
   897                           
   898                           ;Lab1.c: 138:             PORTB = 0;
   899  0731  0186               	clrf	6	;volatile
   900  0732                     l846:	
   901                           
   902                           ;Lab1.c: 140:         if(y==9){
   903  0732  3009               	movlw	9
   904  0733  0676               	xorwf	_y,w
   905  0734  1D03               	btfss	3,2
   906  0735  2F37               	goto	u231
   907  0736  2F38               	goto	u230
   908  0737                     u231:	
   909  0737  2EDD               	goto	l59
   910  0738                     u230:	
   911  0738                     l848:	
   912                           
   913                           ;Lab1.c: 141:             y=0;
   914  0738  01F6               	clrf	_y
   915  0739                     l850:	
   916                           
   917                           ;Lab1.c: 142:             i=3;
   918  0739  3003               	movlw	3
   919  073A  00FA               	movwf	??_JUEGO
   920  073B  087A               	movf	??_JUEGO,w
   921  073C  00F4               	movwf	_i
   922  073D                     l852:	
   923                           
   924                           ;Lab1.c: 143:             PORTDbits.RD2 = 0;
   925  073D  1108               	bcf	8,2	;volatile
   926  073E                     l854:	
   927                           
   928                           ;Lab1.c: 144:             PORTDbits.RD3 = 0;
   929  073E  1188               	bcf	8,3	;volatile
   930  073F                     l856:	
   931                           
   932                           ;Lab1.c: 145:             PORTDbits.RD4 = 0;
   933  073F  1208               	bcf	8,4	;volatile
   934  0740                     l64:	
   935  0740  0008               	return
   936  0741                     __end_of_JUEGO:	
   937  007E                     btemp	set	126	;btemp
   938  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        22
    BSS         4
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      3      13
    BANK0            80      0      16
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _main->_JUEGO

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              1 COMMON     2     2      0
                              _JUEGO
 ---------------------------------------------------------------------------------
 (1) _JUEGO                                                1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _JUEGO

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0      10       5       20.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      3       D       1       92.9%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      1D      12        0.0%
ABS                  0      0      1D       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sun Jan 26 01:03:08 2020

                       _i 0074                         _x 0077                         _y 0076  
                       pc 0002               __CFG_CP$OFF 0000                        l60 06E5  
                      l52 075E                        l63 0710                        l64 0740  
                      l65 0716                        l59 06DD                        fsr 0004  
                     _EJ1 0078                       l810 06F3                       _EJ2 0075  
                     l820 0707                       l812 06F9                       l804 06E3  
                     l900 076C                       l822 0708                       l806 06E9  
                     l814 06FA                       l910 077C                       l902 076D  
                     l840 072A                       l832 0714                       l824 070C  
                     l816 0700                       l808 06EE                       l920 0793  
                     l912 0783                       l904 076E                       l850 0739  
                     l834 071A                       l842 072B                       l826 070D  
                     l818 0701                       l930 07A5                       l922 079A  
                     l914 0784                       l906 076F                       l852 073D  
                     l844 0731                       l836 071F                       l828 070E  
                     l940 07B4                       l932 07AA                       l924 079B  
                     l916 0785                       l908 0777                       l860 0741  
                     l854 073E                       l846 0732                       l838 0724  
                     l942 07B5                       l934 07B1                       l926 079C  
                     l918 0786                       l870 0749                       l862 0745  
                     l856 073F                       l848 0738                       l944 07BD  
                     l936 07B2                       l928 079D                       l880 0750  
                     l872 074A                       l864 0746                       l938 07B3  
                     l890 0757                       l882 0751                       l874 074B  
                     l866 0747                       l892 0758                       l884 0754  
                     l876 074C                       l868 0748                       l894 075C  
                     l886 0755                       l878 074D                       l896 0762  
                     l888 0756                       l898 0767                       u200 071A  
                     u201 0719                       u210 071F                       u211 071E  
                     u220 0731                       u140 06E3                       u221 0730  
                     u141 06E2                       u230 0738                       u150 06E9  
                     u231 0737                       u151 06E8                       u160 06EE  
                     u240 075C                       u161 06ED                       u241 075B  
                     u170 0700                       u250 0762                       u171 06FF  
                     u307 07B9                       u251 0761                       u180 0707  
                     u260 0767                       u181 0706                       u261 0766  
                     u190 0714                       u191 0713              __CFG_CPD$OFF 0000  
                     u277 0773                       u287 078A                       u297 07A1  
                     fsr0 0004                       indf 0000              __CFG_LVP$OFF 0000  
            __CFG_WRT$OFF 0000                      _main 0741                      btemp 007E  
                    start 0000             __CFG_IESO$OFF 0000                     ?_main 007A  
           __CFG_WDTE$OFF 0000                     _ANSEL 0188                     _JUEGO 06DD  
                   _PORTA 0005                     _PORTB 0006                     _PORTC 0007  
                   _TRISA 0085                     _TRISC 0087            __CFG_FCMEN$OFF 0000  
          __CFG_BOREN$OFF 0000                     pclath 000A                     status 0003  
                   wtemp0 007E            __CFG_MCLRE$OFF 0000           __initialization 07C6  
            __end_of_main 07C6                    ??_main 007B                    ?_JUEGO 007A  
                  _ANSELH 0189                    _OSCCON 008F            __CFG_PWRTE$OFF 0000  
                  _Estado 0079              __pdataCOMMON 0070   __end_of__initialization 07FC  
           __end_of_JUEGO 0741            __pcstackCOMMON 007A              __pidataBANK0 06BA  
                 ??_JUEGO 007A                __pmaintext 0741                   __ptext1 06DD  
    end_of_initialization 07FC                 _SEGMENTOS 0070                 _PORTDbits 0008  
               _PORTEbits 0009                 _TRISDbits 0088                 _TRISEbits 0089  
           __pidataCOMMON 06B4       start_initialization 07C6  __CFG_FOSC$INTRC_NOCLKOUT 0000  
              init_fetch0 06CA               __pdataBANK0 0020               __pbssCOMMON 0076  
               ___latbits 0002            __size_of_JUEGO 0064         __CFG_BOR4V$BOR40V 0000  
           __size_of_main 0085                  _jugador1 0028                  _jugador2 0020  
                init_ram0 06CE  
