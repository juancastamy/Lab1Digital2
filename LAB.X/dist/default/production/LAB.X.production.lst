

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Sat Jan 25 17:15:18 2020

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	16F887
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	idataCOMMON,global,class=CODE,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1
     7                           	psect	dataCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	inittext,global,class=CODE,delta=2
     9                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	dabs	1,0x7E,2
    12  0000                     
    13                           ; Version 2.10
    14                           ; Generated 31/07/2019 GMT
    15                           ; 
    16                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC16F887 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     	;# 
    48  0001                     	;# 
    49  0002                     	;# 
    50  0003                     	;# 
    51  0004                     	;# 
    52  0005                     	;# 
    53  0006                     	;# 
    54  0007                     	;# 
    55  0008                     	;# 
    56  0009                     	;# 
    57  000A                     	;# 
    58  000B                     	;# 
    59  000C                     	;# 
    60  000D                     	;# 
    61  000E                     	;# 
    62  000E                     	;# 
    63  000F                     	;# 
    64  0010                     	;# 
    65  0011                     	;# 
    66  0012                     	;# 
    67  0013                     	;# 
    68  0014                     	;# 
    69  0015                     	;# 
    70  0015                     	;# 
    71  0016                     	;# 
    72  0017                     	;# 
    73  0018                     	;# 
    74  0019                     	;# 
    75  001A                     	;# 
    76  001B                     	;# 
    77  001B                     	;# 
    78  001C                     	;# 
    79  001D                     	;# 
    80  001E                     	;# 
    81  001F                     	;# 
    82  0081                     	;# 
    83  0085                     	;# 
    84  0086                     	;# 
    85  0087                     	;# 
    86  0088                     	;# 
    87  0089                     	;# 
    88  008C                     	;# 
    89  008D                     	;# 
    90  008E                     	;# 
    91  008F                     	;# 
    92  0090                     	;# 
    93  0091                     	;# 
    94  0092                     	;# 
    95  0093                     	;# 
    96  0093                     	;# 
    97  0093                     	;# 
    98  0094                     	;# 
    99  0095                     	;# 
   100  0096                     	;# 
   101  0097                     	;# 
   102  0098                     	;# 
   103  0099                     	;# 
   104  009A                     	;# 
   105  009B                     	;# 
   106  009C                     	;# 
   107  009D                     	;# 
   108  009E                     	;# 
   109  009F                     	;# 
   110  0105                     	;# 
   111  0107                     	;# 
   112  0108                     	;# 
   113  0109                     	;# 
   114  010C                     	;# 
   115  010C                     	;# 
   116  010D                     	;# 
   117  010E                     	;# 
   118  010F                     	;# 
   119  0185                     	;# 
   120  0187                     	;# 
   121  0188                     	;# 
   122  0189                     	;# 
   123  018C                     	;# 
   124  018D                     	;# 
   125  0000                     	;# 
   126  0001                     	;# 
   127  0002                     	;# 
   128  0003                     	;# 
   129  0004                     	;# 
   130  0005                     	;# 
   131  0006                     	;# 
   132  0007                     	;# 
   133  0008                     	;# 
   134  0009                     	;# 
   135  000A                     	;# 
   136  000B                     	;# 
   137  000C                     	;# 
   138  000D                     	;# 
   139  000E                     	;# 
   140  000E                     	;# 
   141  000F                     	;# 
   142  0010                     	;# 
   143  0011                     	;# 
   144  0012                     	;# 
   145  0013                     	;# 
   146  0014                     	;# 
   147  0015                     	;# 
   148  0015                     	;# 
   149  0016                     	;# 
   150  0017                     	;# 
   151  0018                     	;# 
   152  0019                     	;# 
   153  001A                     	;# 
   154  001B                     	;# 
   155  001B                     	;# 
   156  001C                     	;# 
   157  001D                     	;# 
   158  001E                     	;# 
   159  001F                     	;# 
   160  0081                     	;# 
   161  0085                     	;# 
   162  0086                     	;# 
   163  0087                     	;# 
   164  0088                     	;# 
   165  0089                     	;# 
   166  008C                     	;# 
   167  008D                     	;# 
   168  008E                     	;# 
   169  008F                     	;# 
   170  0090                     	;# 
   171  0091                     	;# 
   172  0092                     	;# 
   173  0093                     	;# 
   174  0093                     	;# 
   175  0093                     	;# 
   176  0094                     	;# 
   177  0095                     	;# 
   178  0096                     	;# 
   179  0097                     	;# 
   180  0098                     	;# 
   181  0099                     	;# 
   182  009A                     	;# 
   183  009B                     	;# 
   184  009C                     	;# 
   185  009D                     	;# 
   186  009E                     	;# 
   187  009F                     	;# 
   188  0105                     	;# 
   189  0107                     	;# 
   190  0108                     	;# 
   191  0109                     	;# 
   192  010C                     	;# 
   193  010C                     	;# 
   194  010D                     	;# 
   195  010E                     	;# 
   196  010F                     	;# 
   197  0185                     	;# 
   198  0187                     	;# 
   199  0188                     	;# 
   200  0189                     	;# 
   201  018C                     	;# 
   202  018D                     	;# 
   203                           
   204                           	psect	idataCOMMON
   205  0731                     __pidataCOMMON:	
   206                           
   207                           ;initializer for _SEGMENTOS
   208  0731  343F               	retlw	63
   209  0732  3406               	retlw	6
   210  0733  345B               	retlw	91
   211  0734  344F               	retlw	79
   212                           
   213                           ;initializer for _i
   214  0735  3403               	retlw	3
   215                           
   216                           ;initializer for _carrera2
   217  0736  3401               	retlw	1
   218                           
   219                           ;initializer for _carrera1
   220  0737  3401               	retlw	1
   221  0008                     _PORTDbits	set	8
   222  0007                     _PORTC	set	7
   223  0009                     _PORTEbits	set	9
   224  0088                     _TRISDbits	set	136
   225  0087                     _TRISC	set	135
   226  008F                     _OSCCON	set	143
   227  0188                     _ANSEL	set	392
   228  0189                     _ANSELH	set	393
   229                           
   230                           ; #config settings
   231  0000                     
   232                           	psect	cinit
   233  07D1                     start_initialization:	
   234  07D1                     __initialization:	
   235                           
   236                           ; Initialize objects allocated to COMMON
   237  07D1  120A  118A  2731  120A  118A  	fcall	__pidataCOMMON	;fetch initializer
   238  07D6  00F0               	movwf	__pdataCOMMON& (0+127)
   239  07D7  120A  118A  2732  120A  118A  	fcall	__pidataCOMMON+1	;fetch initializer
   240  07DC  00F1               	movwf	(__pdataCOMMON+1)& (0+127)
   241  07DD  120A  118A  2733  120A  118A  	fcall	__pidataCOMMON+2	;fetch initializer
   242  07E2  00F2               	movwf	(__pdataCOMMON+2)& (0+127)
   243  07E3  120A  118A  2734  120A  118A  	fcall	__pidataCOMMON+3	;fetch initializer
   244  07E8  00F3               	movwf	(__pdataCOMMON+3)& (0+127)
   245  07E9  120A  118A  2735  120A  118A  	fcall	__pidataCOMMON+4	;fetch initializer
   246  07EE  00F4               	movwf	(__pdataCOMMON+4)& (0+127)
   247  07EF  120A  118A  2736  120A  118A  	fcall	__pidataCOMMON+5	;fetch initializer
   248  07F4  00F5               	movwf	(__pdataCOMMON+5)& (0+127)
   249  07F5  120A  118A  2737  120A  118A  	fcall	__pidataCOMMON+6	;fetch initializer
   250  07FA  00F6               	movwf	(__pdataCOMMON+6)& (0+127)
   251                           
   252                           ; Clear objects allocated to COMMON
   253  07FB  01F9               	clrf	__pbssCOMMON& (0+127)
   254  07FC                     end_of_initialization:	
   255                           ;End of C runtime variable initialization code
   256                           
   257  07FC                     __end_of__initialization:	
   258  07FC  0183               	clrf	3
   259  07FD  120A  118A  2F4B   	ljmp	_main	;jump to C main() function
   260                           
   261                           	psect	bssCOMMON
   262  0079                     __pbssCOMMON:	
   263  0079                     _Estado:	
   264  0079                     	ds	1
   265                           
   266                           	psect	dataCOMMON
   267  0070                     __pdataCOMMON:	
   268  0070                     _SEGMENTOS:	
   269  0070                     	ds	4
   270  0074                     _i:	
   271  0074                     	ds	1
   272  0075                     _carrera2:	
   273  0075                     	ds	1
   274  0076                     _carrera1:	
   275  0076                     	ds	1
   276                           
   277                           	psect	inittext
   278  0738                     init_fetch0:	
   279                           ;	Called with low address in FSR and high address in W
   280                           
   281  0738  087E               	movf	btemp,w
   282  0739  008A               	movwf	10
   283  073A  087F               	movf	btemp+1,w
   284  073B  0082               	movwf	2
   285  073C                     init_ram0:	
   286                           ;Called with:
   287                           ;	high address of idata address in btemp 
   288                           ;	low address of idata address in btemp+1 
   289                           ;	low address of data in FSR
   290                           ;	high address + 1 of data in btemp-1
   291                           
   292  073C  120A  118A  2738  120A  118A  	fcall	init_fetch0
   293  0741  0080               	movwf	0
   294  0742  0A84               	incf	4,f
   295  0743  0804               	movf	4,w
   296  0744  067D               	xorwf	btemp+-1,w
   297  0745  1903               	btfsc	3,2
   298  0746  3400               	retlw	0
   299  0747  0AFF               	incf	btemp+1,f
   300  0748  1903               	btfsc	3,2
   301  0749  0AFE               	incf	btemp,f
   302  074A  2F3C               	goto	init_ram0
   303                           
   304                           	psect	cstackCOMMON
   305  0077                     __pcstackCOMMON:	
   306  0077                     ?_main:	
   307  0077                     ??_main:	
   308                           ; 1 bytes @ 0x0
   309                           
   310                           
   311                           ; 1 bytes @ 0x0
   312  0077                     	ds	2
   313                           
   314                           	psect	maintext
   315  074B                     __pmaintext:	
   316 ;;
   317 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   318 ;;
   319 ;; *************** function _main *****************
   320 ;; Defined at:
   321 ;;		line 49 in file "Lab1.c"
   322 ;; Parameters:    Size  Location     Type
   323 ;;		None
   324 ;; Auto vars:     Size  Location     Type
   325 ;;		None
   326 ;; Return value:  Size  Location     Type
   327 ;;                  1    wreg      void 
   328 ;; Registers used:
   329 ;;		wreg, fsr0l, fsr0h, status,2, status,0
   330 ;; Tracked objects:
   331 ;;		On entry : B00/0
   332 ;;		On exit  : 0/0
   333 ;;		Unchanged: 0/0
   334 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   335 ;;      Params:         0       0       0       0       0
   336 ;;      Locals:         0       0       0       0       0
   337 ;;      Temps:          2       0       0       0       0
   338 ;;      Totals:         2       0       0       0       0
   339 ;;Total ram usage:        2 bytes
   340 ;; This function calls:
   341 ;;		Nothing
   342 ;; This function is called by:
   343 ;;		Startup code after reset
   344 ;; This function uses a non-reentrant model
   345 ;;
   346                           
   347                           
   348                           ;psect for function _main
   349  074B                     _main:	
   350  074B                     l631:	
   351                           ;incstack = 0
   352                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0]
   353                           
   354                           
   355                           ;Lab1.c: 50:     OSCCON = 0b110;
   356  074B  3006               	movlw	6
   357  074C  1683               	bsf	3,5	;RP0=1, select bank1
   358  074D  1303               	bcf	3,6	;RP1=0, select bank1
   359  074E  008F               	movwf	15	;volatile
   360  074F                     l633:	
   361                           
   362                           ;Lab1.c: 51:     TRISC = 0;
   363  074F  0187               	clrf	7	;volatile
   364  0750                     l635:	
   365                           
   366                           ;Lab1.c: 52:     TRISDbits.TRISD2 = 0;
   367  0750  1108               	bcf	8,2	;volatile
   368  0751                     l637:	
   369                           
   370                           ;Lab1.c: 53:     TRISDbits.TRISD3 = 0;
   371  0751  1188               	bcf	8,3	;volatile
   372  0752                     l639:	
   373                           
   374                           ;Lab1.c: 54:     TRISDbits.TRISD4 = 0;
   375  0752  1208               	bcf	8,4	;volatile
   376  0753                     l641:	
   377                           
   378                           ;Lab1.c: 57:     PORTEbits.RE3 = 1;
   379  0753  1283               	bcf	3,5	;RP0=0, select bank0
   380  0754  1303               	bcf	3,6	;RP1=0, select bank0
   381  0755  1589               	bsf	9,3	;volatile
   382  0756                     l643:	
   383                           
   384                           ;Lab1.c: 60:     ANSELH = 0;
   385  0756  1683               	bsf	3,5	;RP0=1, select bank3
   386  0757  1703               	bsf	3,6	;RP1=1, select bank3
   387  0758  0189               	clrf	9	;volatile
   388  0759                     l645:	
   389                           
   390                           ;Lab1.c: 61:     ANSEL = 0;
   391  0759  0188               	clrf	8	;volatile
   392  075A                     l647:	
   393                           
   394                           ;Lab1.c: 62:     PORTC = SEGMENTOS[0];
   395  075A  0870               	movf	_SEGMENTOS,w
   396  075B  1283               	bcf	3,5	;RP0=0, select bank0
   397  075C  1303               	bcf	3,6	;RP1=0, select bank0
   398  075D  0087               	movwf	7	;volatile
   399  075E                     l649:	
   400                           
   401                           ;Lab1.c: 64:         if (PORTEbits.RE3 == 1){
   402  075E  1283               	bcf	3,5	;RP0=0, select bank0
   403  075F  1303               	bcf	3,6	;RP1=0, select bank0
   404  0760  1D89               	btfss	9,3	;volatile
   405  0761  2F63               	goto	u11
   406  0762  2F64               	goto	u10
   407  0763                     u11:	
   408  0763  2F66               	goto	l34
   409  0764                     u10:	
   410  0764                     l651:	
   411                           
   412                           ;Lab1.c: 65:             Estado = 1;
   413  0764  01F9               	clrf	_Estado
   414  0765  0AF9               	incf	_Estado,f
   415  0766                     l34:	
   416                           ;Lab1.c: 66:         }
   417                           
   418                           
   419                           ;Lab1.c: 67:         if (PORTEbits.RE3 == 0 && Estado == 1){
   420  0766  1989               	btfsc	9,3	;volatile
   421  0767  2F69               	goto	u21
   422  0768  2F6A               	goto	u20
   423  0769                     u21:	
   424  0769  2FC6               	goto	l35
   425  076A                     u20:	
   426  076A                     l653:	
   427  076A  0379               	decf	_Estado,w
   428  076B  1D03               	btfss	3,2
   429  076C  2F6E               	goto	u31
   430  076D  2F6F               	goto	u30
   431  076E                     u31:	
   432  076E  2FC6               	goto	l35
   433  076F                     u30:	
   434  076F                     l655:	
   435                           
   436                           ;Lab1.c: 68:             PORTC = SEGMENTOS[i];
   437  076F  0874               	movf	_i,w
   438  0770  3E70               	addlw	(low (_SEGMENTOS| 0))& (0+255)
   439  0771  0084               	movwf	4
   440  0772  0800               	movf	0,w
   441  0773  0087               	movwf	7	;volatile
   442  0774                     l657:	
   443                           
   444                           ;Lab1.c: 69:             PORTDbits.RD2 = 1;
   445  0774  1508               	bsf	8,2	;volatile
   446  0775                     l659:	
   447                           
   448                           ;Lab1.c: 70:             PORTDbits.RD3 = 0;
   449  0775  1188               	bcf	8,3	;volatile
   450  0776                     l661:	
   451                           
   452                           ;Lab1.c: 71:             PORTDbits.RD4 = 0;
   453  0776  1208               	bcf	8,4	;volatile
   454  0777                     l663:	
   455                           
   456                           ;Lab1.c: 72:             _delay((unsigned long)((5)*(4000000/4000.0)));
   457  0777  3007               	movlw	7
   458  0778  00F8               	movwf	??_main+1
   459  0779  307D               	movlw	125
   460  077A  00F7               	movwf	??_main
   461  077B                     u47:	
   462  077B  0BF7               	decfsz	??_main,f
   463  077C  2F7B               	goto	u47
   464  077D  0BF8               	decfsz	??_main+1,f
   465  077E  2F7B               	goto	u47
   466  077F                     l665:	
   467                           
   468                           ;Lab1.c: 73:             i = i-1;
   469  077F  0874               	movf	_i,w
   470  0780  3EFF               	addlw	255
   471  0781  00F7               	movwf	??_main
   472  0782  0877               	movf	??_main,w
   473  0783  00F4               	movwf	_i
   474  0784                     l667:	
   475                           
   476                           ;Lab1.c: 75:             PORTC = SEGMENTOS[i];
   477  0784  0874               	movf	_i,w
   478  0785  3E70               	addlw	(low (_SEGMENTOS| 0))& (0+255)
   479  0786  0084               	movwf	4
   480  0787  0800               	movf	0,w
   481  0788  1283               	bcf	3,5	;RP0=0, select bank0
   482  0789  1303               	bcf	3,6	;RP1=0, select bank0
   483  078A  0087               	movwf	7	;volatile
   484  078B                     l669:	
   485                           
   486                           ;Lab1.c: 76:             PORTDbits.RD2 = 0;
   487  078B  1108               	bcf	8,2	;volatile
   488  078C                     l671:	
   489                           
   490                           ;Lab1.c: 77:             PORTDbits.RD3 = 1;
   491  078C  1588               	bsf	8,3	;volatile
   492  078D                     l673:	
   493                           
   494                           ;Lab1.c: 78:             PORTDbits.RD4 = 0;
   495  078D  1208               	bcf	8,4	;volatile
   496  078E                     l675:	
   497                           
   498                           ;Lab1.c: 79:             _delay((unsigned long)((5)*(4000000/4000.0)));
   499  078E  3007               	movlw	7
   500  078F  00F8               	movwf	??_main+1
   501  0790  307D               	movlw	125
   502  0791  00F7               	movwf	??_main
   503  0792                     u57:	
   504  0792  0BF7               	decfsz	??_main,f
   505  0793  2F92               	goto	u57
   506  0794  0BF8               	decfsz	??_main+1,f
   507  0795  2F92               	goto	u57
   508                           
   509                           ;Lab1.c: 80:             i = i-1;
   510  0796  0874               	movf	_i,w
   511  0797  3EFF               	addlw	255
   512  0798  00F7               	movwf	??_main
   513  0799  0877               	movf	??_main,w
   514  079A  00F4               	movwf	_i
   515  079B                     l677:	
   516                           
   517                           ;Lab1.c: 81:             PORTC = SEGMENTOS[i];
   518  079B  0874               	movf	_i,w
   519  079C  3E70               	addlw	(low (_SEGMENTOS| 0))& (0+255)
   520  079D  0084               	movwf	4
   521  079E  0800               	movf	0,w
   522  079F  1283               	bcf	3,5	;RP0=0, select bank0
   523  07A0  1303               	bcf	3,6	;RP1=0, select bank0
   524  07A1  0087               	movwf	7	;volatile
   525  07A2                     l679:	
   526                           
   527                           ;Lab1.c: 82:             PORTDbits.RD2 = 0;
   528  07A2  1108               	bcf	8,2	;volatile
   529  07A3                     l681:	
   530                           
   531                           ;Lab1.c: 83:             PORTDbits.RD3 = 0;
   532  07A3  1188               	bcf	8,3	;volatile
   533  07A4                     l683:	
   534                           
   535                           ;Lab1.c: 84:             PORTDbits.RD4 = 1;
   536  07A4  1608               	bsf	8,4	;volatile
   537  07A5                     l685:	
   538                           
   539                           ;Lab1.c: 85:             _delay((unsigned long)((5)*(4000000/4000.0)));
   540  07A5  3007               	movlw	7
   541  07A6  00F8               	movwf	??_main+1
   542  07A7  307D               	movlw	125
   543  07A8  00F7               	movwf	??_main
   544  07A9                     u67:	
   545  07A9  0BF7               	decfsz	??_main,f
   546  07AA  2FA9               	goto	u67
   547  07AB  0BF8               	decfsz	??_main+1,f
   548  07AC  2FA9               	goto	u67
   549  07AD                     l687:	
   550                           
   551                           ;Lab1.c: 86:             i = i-1;
   552  07AD  0874               	movf	_i,w
   553  07AE  3EFF               	addlw	255
   554  07AF  00F7               	movwf	??_main
   555  07B0  0877               	movf	??_main,w
   556  07B1  00F4               	movwf	_i
   557  07B2                     l689:	
   558                           
   559                           ;Lab1.c: 87:             PORTC = SEGMENTOS[i];
   560  07B2  0874               	movf	_i,w
   561  07B3  3E70               	addlw	(low (_SEGMENTOS| 0))& (0+255)
   562  07B4  0084               	movwf	4
   563  07B5  0800               	movf	0,w
   564  07B6  1283               	bcf	3,5	;RP0=0, select bank0
   565  07B7  1303               	bcf	3,6	;RP1=0, select bank0
   566  07B8  0087               	movwf	7	;volatile
   567  07B9                     l691:	
   568                           
   569                           ;Lab1.c: 88:             PORTDbits.RD2 = 1;
   570  07B9  1508               	bsf	8,2	;volatile
   571  07BA                     l693:	
   572                           
   573                           ;Lab1.c: 89:             PORTDbits.RD3 = 1;
   574  07BA  1588               	bsf	8,3	;volatile
   575  07BB                     l695:	
   576                           
   577                           ;Lab1.c: 90:             PORTDbits.RD4 = 1;
   578  07BB  1608               	bsf	8,4	;volatile
   579  07BC                     l697:	
   580                           
   581                           ;Lab1.c: 91:             Estado = 0;
   582  07BC  01F9               	clrf	_Estado
   583  07BD                     l699:	
   584                           
   585                           ;Lab1.c: 92:             _delay((unsigned long)((5)*(4000000/4000.0)));
   586  07BD  3007               	movlw	7
   587  07BE  00F8               	movwf	??_main+1
   588  07BF  307D               	movlw	125
   589  07C0  00F7               	movwf	??_main
   590  07C1                     u77:	
   591  07C1  0BF7               	decfsz	??_main,f
   592  07C2  2FC1               	goto	u77
   593  07C3  0BF8               	decfsz	??_main+1,f
   594  07C4  2FC1               	goto	u77
   595                           
   596                           ;Lab1.c: 93:         }
   597  07C5  2F5E               	goto	l649
   598  07C6                     l35:	
   599                           ;Lab1.c: 94:         else {
   600                           
   601                           
   602                           ;Lab1.c: 95:             PORTDbits.RD2 = 0;
   603  07C6  1108               	bcf	8,2	;volatile
   604                           
   605                           ;Lab1.c: 96:             PORTDbits.RD3 = 0;
   606  07C7  1188               	bcf	8,3	;volatile
   607                           
   608                           ;Lab1.c: 97:             PORTDbits.RD4 = 0;
   609  07C8  1208               	bcf	8,4	;volatile
   610  07C9                     l701:	
   611                           
   612                           ;Lab1.c: 98:             i = 3;
   613  07C9  3003               	movlw	3
   614  07CA  00F7               	movwf	??_main
   615  07CB  0877               	movf	??_main,w
   616  07CC  00F4               	movwf	_i
   617  07CD  2F5E               	goto	l649
   618  07CE  120A  118A  2800   	ljmp	start
   619  07D1                     __end_of_main:	
   620  007E                     btemp	set	126	;btemp
   621  007E                     wtemp0	set	126


Data Sizes:
    Strings     0
    Constant    0
    Data        7
    BSS         1
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      2      10
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                              0 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      0       0       5        0.0%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      2       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0       A      12        0.0%
ABS                  0      0       A       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Sat Jan 25 17:15:18 2020

                       _i 0074                         pc 0002               __CFG_CP$OFF 0000  
                      l34 0766                        l35 07C6                        u10 0764  
                      u11 0763                        u20 076A                        u21 0769  
                      u30 076F                        u31 076E                        u47 077B  
                      u57 0792                        u67 07A9                        u77 07C1  
                      fsr 0004                       l701 07C9                       l631 074B  
                     l641 0753                       l633 074F                       l651 0764  
                     l643 0756                       l635 0750                       l661 0776  
                     l653 076A                       l645 0759                       l637 0751  
                     l671 078C                       l663 0777                       l655 076F  
                     l647 075A                       l639 0752                       l681 07A3  
                     l673 078D                       l665 077F                       l657 0774  
                     l649 075E                       l691 07B9                       l683 07A4  
                     l675 078E                       l667 0784                       l659 0775  
                     l693 07BA                       l685 07A5                       l677 079B  
                     l669 078B                       l695 07BB                       l687 07AD  
                     l679 07A2                       l697 07BC                       l689 07B2  
                     l699 07BD              __CFG_CPD$OFF 0000                       fsr0 0004  
                     indf 0000              __CFG_LVP$OFF 0000              __CFG_WRT$OFF 0000  
                    _main 074B                      btemp 007E                      start 0000  
           __CFG_IESO$OFF 0000                     ?_main 0077             __CFG_WDTE$OFF 0000  
                   _ANSEL 0188                     _PORTC 0007                     _TRISC 0087  
          __CFG_FCMEN$OFF 0000            __CFG_BOREN$OFF 0000                     pclath 000A  
                   status 0003                     wtemp0 007E            __CFG_MCLRE$OFF 0000  
         __initialization 07D1              __end_of_main 07D1                    ??_main 0077  
                  _ANSELH 0189                    _OSCCON 008F            __CFG_PWRTE$OFF 0000  
                  _Estado 0079              __pdataCOMMON 0070   __end_of__initialization 07FC  
          __pcstackCOMMON 0077                __pmaintext 074B      end_of_initialization 07FC  
               _SEGMENTOS 0070                 _PORTDbits 0008                 _PORTEbits 0009  
               _TRISDbits 0088             __pidataCOMMON 0731       start_initialization 07D1  
__CFG_FOSC$INTRC_NOCLKOUT 0000                init_fetch0 0738               __pbssCOMMON 0079  
               ___latbits 0002                  _carrera1 0076                  _carrera2 0075  
       __CFG_BOR4V$BOR40V 0000             __size_of_main 0086                  init_ram0 073C  
